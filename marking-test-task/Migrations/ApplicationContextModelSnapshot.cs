// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using marking_test_task.Context;

#nullable disable

namespace marking_test_task.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("marking_test_task.Models.Bottle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BoxId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BoxId");

                    b.ToTable("Bottles");
                });

            modelBuilder.Entity("marking_test_task.Models.Box", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PalleteId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PalleteId");

                    b.ToTable("Boxes");
                });

            modelBuilder.Entity("marking_test_task.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoxCapacity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Gtin")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MissionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PalleteCapacity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MissionId")
                        .IsUnique();

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("marking_test_task.Models.Pallete", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MissionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MissionId");

                    b.ToTable("Palletes");
                });

            modelBuilder.Entity("marking_test_task.Models.Bottle", b =>
                {
                    b.HasOne("marking_test_task.Models.Box", "Boxses")
                        .WithMany("Bottles")
                        .HasForeignKey("BoxId");

                    b.Navigation("Boxses");
                });

            modelBuilder.Entity("marking_test_task.Models.Box", b =>
                {
                    b.HasOne("marking_test_task.Models.Pallete", "Pallete")
                        .WithMany("Boxes")
                        .HasForeignKey("PalleteId");

                    b.Navigation("Pallete");
                });

            modelBuilder.Entity("marking_test_task.Models.Pallete", b =>
                {
                    b.HasOne("marking_test_task.Models.Mission", "Mission")
                        .WithMany("Palletes")
                        .HasForeignKey("MissionId")
                        .HasPrincipalKey("MissionId");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("marking_test_task.Models.Box", b =>
                {
                    b.Navigation("Bottles");
                });

            modelBuilder.Entity("marking_test_task.Models.Mission", b =>
                {
                    b.Navigation("Palletes");
                });

            modelBuilder.Entity("marking_test_task.Models.Pallete", b =>
                {
                    b.Navigation("Boxes");
                });
#pragma warning restore 612, 618
        }
    }
}
